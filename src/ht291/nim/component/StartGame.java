/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ht291.nim.component;

import ht291.nim.model.Status;
import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JButton;

/**
 *
 * @author ASUS
 */
public class StartGame extends javax.swing.JPanel {

    /**
     * Creates new form StartGame
     */
    public StartGame() {
        initComponents();

        btnPlayGame.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnPlayGame.setIcon(new ImageIcon(getClass().getResource("/ht291/nim/data/btnPlayGame_red.png")));
            }

            @Override
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnPlayGame.setIcon(new ImageIcon(getClass().getResource("/ht291/nim/data/btnPlayGame.png")));
            }
        });
    }

    public Status readFileStatus() {
        String s = "";
        int mode = 0, level = 0, turn = 0, player = 0, nrow = 0, ncol = 0;
        int mapGame[][] = null;
//        FileInputStream fis = null;
//        String dir = System.getProperty("user.dir");
        InputStream inputStream = null;
        try {
            inputStream = new FileInputStream("status.txt");
        } catch (FileNotFoundException ex) {
//            Logger.getLogger(StartGame.class.getName()).log(Level.SEVERE, null, ex);
        }
        InputStreamReader streamReader = null;
        if (inputStream != null) {
            try {
                streamReader = new InputStreamReader(inputStream, "UTF-8");
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(StartGame.class.getName()).log(Level.SEVERE, null, ex);
            }

            BufferedReader in = new BufferedReader(streamReader);

            int i = 0;
            try {
                while ((s = in.readLine()) != null) {
                    if (!s.equals("")) {
                        switch (i) {
                            case 0:
                                String index[] = s.split("\\s");
                                mode = Integer.parseInt(index[0]);
                                level = Integer.parseInt(index[1]);
                                turn = Integer.parseInt(index[2]);
                                break;
                            case 1:
                                player = Integer.parseInt(s);
                                break;
                            case 2:
                                String idx[] = s.split("\\s");
                                nrow = Integer.parseInt(idx[0]);
                                ncol = Integer.parseInt(idx[1]);
                                mapGame = new int[nrow][ncol];
                                break;
                            default:

                                String nim[] = s.split("\\s");
                                for (int j = 0; j < ncol; j++) {
                                    mapGame[i - 3][j] = Integer.parseInt(nim[j]);
                                }
                                break;
                        }
                    } else {
                        break;
                    }
                    i++;
                }
//        } finally {
//            try {
//                scanner.close();
//                fileInputStream.close();
//            } catch (IOException ex) {
//                ex.printStackTrace();
//            }
//        }
            } catch (IOException ex) {
                Logger.getLogger(StartGame.class.getName()).log(Level.SEVERE, null, ex);
            }
//
////        System.out.println(mode+" "+ level+" "+turn);
////        System.out.println(player+"\n"+ nrow+ " "+ncol);
////        for (int i = 0; i < nrow; i++) {
////            for (int j = 0; j < ncol; j++) {
////                System.out.printf("%5d  ", mapGame[i][j]);
////            }
////            System.out.println();
////        }
        } else {
            return null;
        }
        if (mapGame == null) {
            return null;
        }
        return new Status(mode, level, turn, player, mapGame, ncol, nrow);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnPlayGame = new javax.swing.JButton();

        setOpaque(false);

        btnPlayGame.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ht291/nim/data/btnPlayGame.png"))); // NOI18N
        btnPlayGame.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPlayGame.setPreferredSize(new java.awt.Dimension(290, 70));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnPlayGame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnPlayGame, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    public JButton getBtnPlayGame() {
        return btnPlayGame;
    }

    public void setBtnPlayGame(JButton btnPlayGame) {
        this.btnPlayGame = btnPlayGame;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPlayGame;
    // End of variables declaration//GEN-END:variables
}
